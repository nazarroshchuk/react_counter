{"version":3,"sources":["components/Counter.jsx","App.js","index.js"],"names":["Counter","props","count","type","onClick","addOne","add100","increase","defaultProps","PropTypes","func","App","state","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mOAGaA,EAAU,SAAAC,GAAK,OAC1B,oCACE,qCAEG,IACCA,EAAMC,OAEV,4BACEC,KAAK,SACLC,QAASH,EAAMI,QAFjB,WAMA,4BACEF,KAAK,SACLC,QAASH,EAAMK,QAFjB,WAMA,4BACEH,KAAK,SACLC,QAASH,EAAMM,UAFjB,cASJP,EAAQQ,aAAe,CACrBN,MAAO,EACPG,OAAQI,IAAUC,KAClBJ,OAAQG,IAAUC,KAClBH,SAAUE,IAAUC,M,ICGPC,E,4MAjCbC,MAAQ,CACNV,MAAO,G,EAGTG,OAAS,WACP,EAAKQ,UAAS,SAAAD,GAAK,MAAK,CAAEV,MAAOU,EAAMV,MAAQ,O,EAGjDI,OAAS,WACP,EAAKO,UAAS,SAAAD,GAAK,MAAK,CAAEV,MAAOU,EAAMV,MAAQ,S,EAGjDK,SAAW,WACT,EAAKF,SACD,EAAKO,MAAMV,MAAQ,IAAM,GAC3B,EAAKI,U,4CAIT,WAAU,IAAD,OACP,OACE,oCACE,kBAAC,EAAD,CACEJ,MAAOY,KAAKF,MAAMV,MAClBG,OAAQ,kBAAM,EAAKA,UACnBC,OAAQ,kBAAM,EAAKA,UACnBC,SAAU,kBAAM,EAAKA,mB,GA3BbQ,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.8bd9f159.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Counter = props => (\n  <>\n    <h1>\n      Count:\n      {' '}\n      { props.count }\n    </h1>\n    <button\n      type=\"button\"\n      onClick={props.addOne}\n    >\n      Add one\n    </button>\n    <button\n      type=\"button\"\n      onClick={props.add100}\n    >\n      Add 100\n    </button>\n    <button\n      type=\"button\"\n      onClick={props.increase}\n    >\n      Increase\n    </button>\n  </>\n);\n\nCounter.defaultProps = {\n  count: 0,\n  addOne: PropTypes.func,\n  add100: PropTypes.func,\n  increase: PropTypes.func,\n};\n\nCounter.propTypes = {\n  count: PropTypes.number,\n  addOne: PropTypes.func,\n  add100: PropTypes.func,\n  increase: PropTypes.func,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Counter } from './components/Counter';\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n  }\n\n  addOne = () => {\n    this.setState(state => ({ count: state.count + 1 }));\n  };\n\n  add100 = () => {\n    this.setState(state => ({ count: state.count + 100 }));\n  };\n\n  increase = () => {\n    this.addOne();\n    if (this.state.count % 5 === 0) {\n      this.add100();\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Counter\n          count={this.state.count}\n          addOne={() => this.addOne()}\n          add100={() => this.add100()}\n          increase={() => this.increase()}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}